{"message":"unexpected end of macro invocation","code":null,"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":763,"byte_end":763,"line_start":17,"line_end":17,"column_start":35,"column_end":35,"is_primary":true,"text":[{"text":"        ensure!(!amount.is_zero(),);","highlight_start":35,"highlight_end":35}],"label":"missing tokens in macro arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"while trying to match meta-variable `$e:expr`","code":null,"level":"note","spans":[{"file_name":"/home/qodeleaf/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-1.2.7/src/assertions.rs","byte_start":817,"byte_end":824,"line_start":31,"line_end":31,"column_start":18,"column_end":25,"is_primary":true,"text":[{"text":"    ($cond:expr, $e:expr) => {","highlight_start":18,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: unexpected end of macro invocation\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:17:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ensure!(!amount.is_zero(),);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing tokens in macro arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: while trying to match meta-variable `$e:expr`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/qodeleaf/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-1.2.7/src/assertions.rs:31:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ($cond:expr, $e:expr) => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\n\n"}
{"message":"unexpected end of macro invocation","code":null,"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":833,"byte_end":833,"line_start":18,"line_end":18,"column_start":68,"column_end":68,"is_primary":true,"text":[{"text":"        ensure!(!TransactionHashLookup.contains_key(Claim.tx_hash),);","highlight_start":68,"highlight_end":68}],"label":"missing tokens in macro arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"while trying to match meta-variable `$e:expr`","code":null,"level":"note","spans":[{"file_name":"/home/qodeleaf/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-1.2.7/src/assertions.rs","byte_start":817,"byte_end":824,"line_start":31,"line_end":31,"column_start":18,"column_end":25,"is_primary":true,"text":[{"text":"    ($cond:expr, $e:expr) => {","highlight_start":18,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: unexpected end of macro invocation\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:18:68\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ensure!(!TransactionHashLookup.contains_key(Claim.tx_hash),);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing tokens in macro arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: while trying to match meta-variable `$e:expr`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/qodeleaf/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-1.2.7/src/assertions.rs:31:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ($cond:expr, $e:expr) => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\n\n"}
{"message":"cannot find attribute `error` in this scope","code":null,"level":"error","spans":[{"file_name":"src/error.rs","byte_start":107,"byte_end":112,"line_start":6,"line_end":6,"column_start":7,"column_end":12,"is_primary":true,"text":[{"text":"    #[error(\"WrongTimeStamp\")]","highlight_start":7,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: cannot find attribute `error` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/error.rs:6:7\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[error(\"WrongTimeStamp\")]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `BankMsg`, `coins`, `entry_point`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":49,"byte_end":56,"line_start":1,"line_end":1,"column_start":50,"column_end":57,"is_primary":true,"text":[{"text":"use cosmwasm_std::{DepsMut, Response, StdResult, BankMsg, coins, entry_point, ensure};","highlight_start":50,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":58,"byte_end":63,"line_start":1,"line_end":1,"column_start":59,"column_end":64,"is_primary":true,"text":[{"text":"use cosmwasm_std::{DepsMut, Response, StdResult, BankMsg, coins, entry_point, ensure};","highlight_start":59,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":65,"byte_end":76,"line_start":1,"line_end":1,"column_start":66,"column_end":77,"is_primary":true,"text":[{"text":"use cosmwasm_std::{DepsMut, Response, StdResult, BankMsg, coins, entry_point, ensure};","highlight_start":66,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":47,"byte_end":76,"line_start":1,"line_end":1,"column_start":48,"column_end":77,"is_primary":true,"text":[{"text":"use cosmwasm_std::{DepsMut, Response, StdResult, BankMsg, coins, entry_point, ensure};","highlight_start":48,"highlight_end":77}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BankMsg`, `coins`, `entry_point`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:1:50\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse cosmwasm_std::{DepsMut, Response, StdResult, BankMsg, coins, entry_point, ensure};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused imports: `Addr`, `BlockInfo`, `Deps`, `Env`, `Event`, `MessageInfo`, `StdError`, `Timestamp`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":106,"byte_end":110,"line_start":2,"line_end":2,"column_start":20,"column_end":24,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Env, MessageInfo, StdError, Timestamp, Event, Deps, BlockInfo};","highlight_start":20,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":112,"byte_end":115,"line_start":2,"line_end":2,"column_start":26,"column_end":29,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Env, MessageInfo, StdError, Timestamp, Event, Deps, BlockInfo};","highlight_start":26,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":117,"byte_end":128,"line_start":2,"line_end":2,"column_start":31,"column_end":42,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Env, MessageInfo, StdError, Timestamp, Event, Deps, BlockInfo};","highlight_start":31,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":130,"byte_end":138,"line_start":2,"line_end":2,"column_start":44,"column_end":52,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Env, MessageInfo, StdError, Timestamp, Event, Deps, BlockInfo};","highlight_start":44,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":140,"byte_end":149,"line_start":2,"line_end":2,"column_start":54,"column_end":63,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Env, MessageInfo, StdError, Timestamp, Event, Deps, BlockInfo};","highlight_start":54,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":151,"byte_end":156,"line_start":2,"line_end":2,"column_start":65,"column_end":70,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Env, MessageInfo, StdError, Timestamp, Event, Deps, BlockInfo};","highlight_start":65,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":158,"byte_end":162,"line_start":2,"line_end":2,"column_start":72,"column_end":76,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Env, MessageInfo, StdError, Timestamp, Event, Deps, BlockInfo};","highlight_start":72,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":164,"byte_end":173,"line_start":2,"line_end":2,"column_start":78,"column_end":87,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Env, MessageInfo, StdError, Timestamp, Event, Deps, BlockInfo};","highlight_start":78,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":87,"byte_end":175,"line_start":2,"line_end":2,"column_start":1,"column_end":89,"is_primary":true,"text":[{"text":"use cosmwasm_std::{Addr, Env, MessageInfo, StdError, Timestamp, Event, Deps, BlockInfo};","highlight_start":1,"highlight_end":89}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Addr`, `BlockInfo`, `Deps`, `Env`, `Event`, `MessageInfo`, `StdError`, `Timestamp`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:2:20\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse cosmwasm_std::{Addr, Env, MessageInfo, StdError, Timestamp, Event, Deps, BlockInfo};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Claims`, `TotalUnclaimedAmount`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/contract.rs","byte_start":195,"byte_end":201,"line_start":3,"line_end":3,"column_start":20,"column_end":26,"is_primary":true,"text":[{"text":"use crate::state::{Claims, PendingClaims, TransactionHashLookup, TotalUnclaimedAmount,LatestBlockNumber};","highlight_start":20,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/contract.rs","byte_start":241,"byte_end":261,"line_start":3,"line_end":3,"column_start":66,"column_end":86,"is_primary":true,"text":[{"text":"use crate::state::{Claims, PendingClaims, TransactionHashLookup, TotalUnclaimedAmount,LatestBlockNumber};","highlight_start":66,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/contract.rs","byte_start":195,"byte_end":203,"line_start":3,"line_end":3,"column_start":20,"column_end":28,"is_primary":true,"text":[{"text":"use crate::state::{Claims, PendingClaims, TransactionHashLookup, TotalUnclaimedAmount,LatestBlockNumber};","highlight_start":20,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/contract.rs","byte_start":239,"byte_end":261,"line_start":3,"line_end":3,"column_start":64,"column_end":86,"is_primary":true,"text":[{"text":"use crate::state::{Claims, PendingClaims, TransactionHashLookup, TotalUnclaimedAmount,LatestBlockNumber};","highlight_start":64,"highlight_end":86}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Claims`, `TotalUnclaimedAmount`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:3:20\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::state::{Claims, PendingClaims, TransactionHashLookup, TotalUnclaimedAmount,LatestBlockNumber};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `cosmwasm_std::StdError`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/error.rs","byte_start":4,"byte_end":26,"line_start":1,"line_end":1,"column_start":5,"column_end":27,"is_primary":true,"text":[{"text":"use cosmwasm_std::StdError;","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/error.rs","byte_start":0,"byte_end":27,"line_start":1,"line_end":1,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"use cosmwasm_std::StdError;","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `cosmwasm_std::StdError`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/error.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse cosmwasm_std::StdError;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `cw_utils::Expiration`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/error.rs","byte_start":32,"byte_end":52,"line_start":2,"line_end":2,"column_start":5,"column_end":25,"is_primary":true,"text":[{"text":"use cw_utils::Expiration;","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/error.rs","byte_start":28,"byte_end":53,"line_start":2,"line_end":2,"column_start":1,"column_end":26,"is_primary":true,"text":[{"text":"use cw_utils::Expiration;","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `cw_utils::Expiration`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/error.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse cw_utils::Expiration;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `thiserror::Error`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/error.rs","byte_start":58,"byte_end":74,"line_start":3,"line_end":3,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use thiserror::Error;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/error.rs","byte_start":54,"byte_end":75,"line_start":3,"line_end":3,"column_start":1,"column_end":22,"is_primary":true,"text":[{"text":"use thiserror::Error;","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `thiserror::Error`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/error.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse thiserror::Error;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the trait bound `cosmwasm_std::StdError: From<ContractError>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/contract.rs","byte_start":536,"byte_end":567,"line_start":12,"line_end":12,"column_start":68,"column_end":99,"is_primary":true,"text":[{"text":"    ensure!(LatestBlockNumber.load(deps.storage).unwrap() < block, ContractError::WrongTimeStamp{});","highlight_start":68,"highlight_end":99}],"label":"the trait `From<ContractError>` is not implemented for `cosmwasm_std::StdError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/qodeleaf/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-1.2.7/src/assertions.rs","byte_start":876,"byte_end":900,"line_start":33,"line_end":33,"column_start":24,"column_end":48,"is_primary":false,"text":[{"text":"            return Err(std::convert::From::from($e));","highlight_start":24,"highlight_end":48}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/contract.rs","byte_start":473,"byte_end":568,"line_start":12,"line_end":12,"column_start":5,"column_end":100,"is_primary":false,"text":[{"text":"    ensure!(LatestBlockNumber.load(deps.storage).unwrap() < block, ContractError::WrongTimeStamp{});","highlight_start":5,"highlight_end":100}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"ensure!","def_site_span":{"file_name":"/home/qodeleaf/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-1.2.7/src/assertions.rs","byte_start":778,"byte_end":797,"line_start":30,"line_end":30,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! ensure {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `From<T>`:\n  <cosmwasm_std::StdError as From<ConversionOverflowError>>\n  <cosmwasm_std::StdError as From<DivideByZeroError>>\n  <cosmwasm_std::StdError as From<FromUtf8Error>>\n  <cosmwasm_std::StdError as From<OverflowError>>\n  <cosmwasm_std::StdError as From<RecoverPubkeyError>>\n  <cosmwasm_std::StdError as From<Utf8Error>>\n  <cosmwasm_std::StdError as From<VerificationError>>","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `cosmwasm_std::StdError: From<ContractError>` is not satisfied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/contract.rs:12:68\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ensure!(LatestBlockNumber.load(deps.storage).unwrap() < block, ContractError::WrongTimeStamp{});\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<ContractError>` is not implemented for `cosmwasm_std::StdError`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `From<T>`:\u001b[0m\n\u001b[0m             <cosmwasm_std::StdError as From<ConversionOverflowError>>\u001b[0m\n\u001b[0m             <cosmwasm_std::StdError as From<DivideByZeroError>>\u001b[0m\n\u001b[0m             <cosmwasm_std::StdError as From<FromUtf8Error>>\u001b[0m\n\u001b[0m             <cosmwasm_std::StdError as From<OverflowError>>\u001b[0m\n\u001b[0m             <cosmwasm_std::StdError as From<RecoverPubkeyError>>\u001b[0m\n\u001b[0m             <cosmwasm_std::StdError as From<Utf8Error>>\u001b[0m\n\u001b[0m             <cosmwasm_std::StdError as From<VerificationError>>\u001b[0m\n\n"}
{"message":"aborting due to 4 previous errors; 6 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 4 previous errors; 6 warnings emitted\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0277`.\u001b[0m\n"}
